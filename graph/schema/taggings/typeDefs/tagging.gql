enum TaggingType {
  ORGANIZATION
  PRODUCT
  TAGGING
}

input CreateTagging {
  tag: ObjectIDOnly!
}

input BulkCreateTagging {
  tag: ObjectIDOnly!
  """
  The field is available for bulk insertion (as a list),
  however it is stored separately on each document.
  """
  correlatedTags: [ObjectIDOnly]
  """
  The field is available for bulk insertion (as a list),
  however it is stored separately on each document.
  """
  products: [ObjectIDOnly]
  """
  The field is available for bulk insertion (as a list),
  however it is stored separately on each document.
  """
  organizations: [ObjectIDOnly]
  isActive: Boolean
  proposalStatus: EntityProposalStatus
}

input InternalCreateTagging {
  _id: ObjectID!
  tag: ObjectIDOnly!
  correlatedTags: [ObjectIDOnly]
  products: [ObjectIDOnly]
  organizations: [ObjectIDOnly]
  isActive: Boolean
  taggingType: TaggingType
  proposalStatus: EntityProposalStatus
  submittingAccount: ObjectIDOnly
  recentApprovingAccount: ObjectIDOnly
  proposedChanges: UpdateTag
  recentLog: ObjectIDOnly
}

input DatabaseCreateTagging {
  _id: ObjectID!
  tag: ObjectIDOnly!
  correlatedTag: ObjectIDOnly
  product: ObjectIDOnly
  organization: ObjectIDOnly
  isActive: Boolean
  taggingType: TaggingType
  proposalStatus: EntityProposalStatus
  submittingAccount: ObjectIDOnly
  recentApprovingAccount: ObjectIDOnly
  proposedChanges: UpdateTag
  recentLog: ObjectIDOnly
  createdAt: Time
  updatedAt: Time
}

input UpdateTagging {
  _id: ObjectID
  tag: ObjectIDOnly
  isActive: Boolean
}

input BulkUpdateTagging {
  IDs: [ObjectID]
  tag: ObjectIDOnly
  correlatedTag: ObjectIDOnly
  product: ObjectIDOnly
  organization: ObjectIDOnly
  isActive: Boolean
  proposalStatus: EntityProposalStatus
  proposalStatusReason: String
  """
  Leave the field empty, will be overriden by server.
  """
  submittingAccount: ObjectIDOnly
  """
  Leave the field empty, will be overriden by server.
  """
  recentApprovingAccount: ObjectIDOnly
}

input InternalUpdateTagging {
  _id: ObjectID
  """
  The `Tag` field is not required when updating. However,
  when adding new `Tagging`, the `Tag` field becomes necessary.
  """
  tag: ObjectIDOnly
  correlatedTag: ObjectIDOnly
  product: ObjectIDOnly
  organization: ObjectIDOnly
  isActive: Boolean
  proposalStatus: EntityProposalStatus
  proposalStatusReason: String
  """
  Leave the field empty, will be overriden by server.
  """
  submittingAccount: ObjectIDOnly
  """
  Leave the field empty, will be overriden by server.
  """
  recentApprovingAccount: ObjectIDOnly
}

input InternalBulkUpdateTagging {
  IDs: [ObjectID]
  tag: ObjectIDOnly
  correlatedTag: ObjectIDOnly
  product: ObjectIDOnly
  organization: ObjectIDOnly
  isActive: Boolean
  proposalStatus: EntityProposalStatus
  proposalStatusReason: String
  submittingAccount: ObjectIDOnly
  recentApprovingAccount: ObjectIDOnly
  proposedChanges: UpdateTag
  recentLog: ObjectIDOnly
}

input DatabaseUpdateTagging {
  _id: ObjectID!
  tag: ObjectIDOnly
  correlatedTag: ObjectIDOnly
  product: ObjectIDOnly
  organization: ObjectIDOnly
  isActive: Boolean
  taggingType: TaggingType
  proposalStatus: EntityProposalStatus
  proposalStatusReason: String
  submittingAccount: ObjectIDOnly
  recentApprovingAccount: ObjectIDOnly
  proposedChanges: UpdateTag
  recentLog: ObjectIDOnly
  updatedAt: Time
}

input TaggingFilterFields {
  _id: ObjectID
  tag: ObjectIDOnly
  correlatedTag: ObjectIDOnly
  product: ObjectIDOnly
  organization: ObjectIDOnly
  isActive: Boolean
  taggingType: TaggingType
  proposalStatus: EntityProposalStatus
  submittingAccount: ObjectIDOnly
  recentApprovingAccount: ObjectIDOnly
  proposedChanges: UpdateTag
  recentLog: ObjectIDOnly
}

type Tagging {
  _id: ObjectID!
  tag: Tag!
  correlatedTag: Tag
  product: Product
  organization: Organization
  isActive: Boolean!
  taggingType: TaggingType
  proposalStatus: EntityProposalStatus!
  proposalStatusReason: String
  submittingAccount: Account
  recentApprovingAccount: Account
  proposedChanges: Tag
  recentLog: Logging!
  createdAt: Time!
  updatedAt: Time!
}
