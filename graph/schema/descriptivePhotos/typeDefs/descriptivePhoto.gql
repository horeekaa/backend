enum DescriptivePhotoCategory {
  ORGANIZATION_PROFILE
  PRODUCT
  PRODUCT_VARIANT
  TAG
  SUPPLY_ORDER_ITEM
  SUPPLY_ORDER_ITEM_ON_PICKUP
  PURCHASE_ORDER_ITEM
  PURCHASE_ORDER_ITEM_AFTER_RECEIVED
  PURCHASE_ORDER_ITEM_RETURN
}

enum DescriptivePhotoType {
  FRONT_SIDE
  LEFT_SIDE
  RIGHT_SIDE
  TOP_SIDE

  FRONT_FACING
  PRODUCTS_OVERVIEW
  LOCATION_MARK_DETAIL
  LOCATION_MARK_OVERVIEW

  THUMBNAIL
  ICON
  BANNER
}

input CreateDescriptivePhoto {
  """
  if photo/image is submitted in the request, then any submitted photoUrl will be overriden
  by the new URL generated from the saved photo in server's storage.
  """
  photo: Upload
  photoUrl: String
  description: String
  type: DescriptivePhotoType!
  proposalStatus: EntityProposalStatus
}

input InternalCreateDescriptivePhoto {
  _id: ObjectID
  photo: Upload
  photoUrl: String
  description: String
  category: DescriptivePhotoCategory!
  type: DescriptivePhotoType!
  object: ObjectIDOnly
  proposalStatus: EntityProposalStatus
  submittingAccount: ObjectIDOnly
  recentApprovingAccount: ObjectIDOnly
  proposedChanges: InternalUpdateDescriptivePhoto
  recentLog: ObjectIDOnly
  createdAt: Time
  updatedAt: Time
}

input DatabaseCreateDescriptivePhoto {
  _id: ObjectID
  photoUrl: String
  description: String
  category: DescriptivePhotoCategory!
  type: DescriptivePhotoType!
  object: ObjectIDOnly
  isActive: Boolean!
  proposalStatus: EntityProposalStatus
  submittingAccount: ObjectIDOnly
  recentApprovingAccount: ObjectIDOnly
  proposedChanges: DatabaseUpdateDescriptivePhoto
  recentLog: ObjectIDOnly
  createdAt: Time
  updatedAt: Time
}

"""
Note: ID is optional in here. (a) If present, an update will occur when submitting the request.
(b) If not present, the request will create new object.
"""
input UpdateDescriptivePhoto {
  _id: ObjectID
  """
  if photo/image is submitted in the request, then any submitted photoUrl will be overriden
  by the new URL generated from the saved photo in server's storage.
  """
  photo: Upload
  photoUrl: String
  description: String
  type: DescriptivePhotoType
  isActive: Boolean
  proposalStatus: EntityProposalStatus
  proposalStatusReason: String
  """
  Leave the field empty, will be overriden by server.
  """
  submittingAccount: ObjectIDOnly
  """
  Leave the field empty, will be overriden by server.
  """
  recentApprovingAccount: ObjectIDOnly
}

input InternalUpdateDescriptivePhoto {
  _id: ObjectID
  """
  if photo/image is submitted in the request, then any submitted photoUrl will be overriden
  by the new URL generated from the saved photo in server's storage.
  """
  photo: Upload
  photoUrl: String
  description: String
  type: DescriptivePhotoType
  isActive: Boolean
  proposalStatus: EntityProposalStatus
  proposalStatusReason: String
  submittingAccount: ObjectIDOnly
  recentApprovingAccount: ObjectIDOnly
  proposedChanges: InternalUpdateDescriptivePhoto
  recentLog: ObjectIDOnly
  updatedAt: Time
}

input DatabaseUpdateDescriptivePhoto {
  _id: ObjectID!
  photoUrl: String
  description: String
  type: DescriptivePhotoType
  isActive: Boolean
  proposalStatus: EntityProposalStatus
  proposalStatusReason: String
  submittingAccount: ObjectIDOnly
  recentApprovingAccount: ObjectIDOnly
  proposedChanges: DatabaseUpdateDescriptivePhoto
  recentLog: ObjectIDOnly
  updatedAt: Time
}

input DescriptivePhotoFilterFields {
  _id: ObjectID
  photoUrl: String
  category: DescriptivePhotoCategory
  type: DescriptivePhotoType
  object: ObjectIDOnly
  isActive: Boolean
  proposalStatus: StringFilterField
  submittingAccount: ObjectIDOnly
  recentApprovingAccount: ObjectIDOnly
  proposedChanges: DescriptivePhotoFilterFields
  recentLog: ObjectIDOnly
}

type DescriptivePhoto {
  _id: ObjectID!
  photoUrl: String!
  category: DescriptivePhotoCategory!
  description: String
  type: DescriptivePhotoType!
  object: ObjectIDOnlyOutput!
  isActive: Boolean
  proposalStatus: EntityProposalStatus!
  proposalStatusReason: String
  submittingAccount: Account!
  recentApprovingAccount: Account
  proposedChanges: DescriptivePhoto
  recentLog: Logging!
  createdAt: Time!
  updatedAt: Time!
}
