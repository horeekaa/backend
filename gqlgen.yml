# Where are all the schema files located? globs are supported eg  src/**/*.graphqls
schema:
  - graph/schema/**/*.gql

# Where should the generated server code go?
exec:
  filename: graph/generated/generated.go
  package: generated

# Uncomment to enable federation
# federation:
#   filename: graph/generated/federation.go
#   package: generated

# Where should any generated models go?
model:
  filename: model/models_gen.go
  package: model

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  dir: graph/resolver
  package: graphresolver

# Optional: turn on use `gqlgen:"fieldName"` tags in your models
# struct_tag: json

# Optional: turn on to use []Thing instead of []*Thing
# omit_slice_element_pointers: false

# Optional: set to speed up generation time by not performing a final validation pass.
# skip_validation: true

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
  - "github.com/horeekaa/backend/model"

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
models:
  Account:
    fields:
      person:
        resolver: true
  Address:
    fields:
      submittingAccount:
        resolver: true
      recentApprovingAccount:
        resolver: true
      recentLog:
        resolver: true
  AddressRegionGroup:
    fields:
      submittingAccount:
        resolver: true
      recentApprovingAccount:
        resolver: true
      recentLog:
        resolver: true
  DescriptivePhoto:
    fields:
      submittingAccount:
        resolver: true
      recentApprovingAccount:
        resolver: true
      recentLog:
        resolver: true
  MemberAccess:
    fields:
      defaultAccessLatestUpdate:
        resolver: true
      organizationLatestUpdate:
        resolver: true
      account:
        resolver: true
      submittingAccount:
        resolver: true
      recentApprovingAccount:
        resolver: true
      recentLog:
        resolver: true
  Logging:
    fields:
      createdByAccount:
        resolver: true
  MemberAccessRef:
    fields:
      submittingAccount:
        resolver: true
      recentApprovingAccount:
        resolver: true
      recentLog:
        resolver: true
  Mou:
    fields:
      submittingAccount:
        resolver: true
      recentApprovingAccount:
        resolver: true
      recentLog:
        resolver: true
      items:
        resolver: true
  MouItem:
    fields:
      product:
        resolver: true
      mou:
        resolver: true
      submittingAccount:
        resolver: true
      recentApprovingAccount:
        resolver: true
      recentLog:
        resolver: true
  Notification:
    fields:
      recipientAccount:
        resolver: true
  Organization:
    fields:
      profilePhotos:
        resolver: true
      taggings:
        resolver: true
      addresses:
        resolver: true
      submittingAccount:
        resolver: true
      recentApprovingAccount:
        resolver: true
      recentLog:
        resolver: true
  Product:
    fields:
      submittingAccount:
        resolver: true
      recentApprovingAccount:
        resolver: true
      recentLog:
        resolver: true
      photos:
        resolver: true
      variants:
        resolver: true
      taggings:
        resolver: true
  ProductVariant:
    fields:
      photo:
        resolver: true
      product:
        resolver: true
      submittingAccount:
        resolver: true
      recentApprovingAccount:
        resolver: true
      recentLog:
        resolver: true
  PurchaseOrder:
    fields:
      items:
        resolver: true
      submittingAccount:
        resolver: true
      recentApprovingAccount:
        resolver: true
      recentLog:
        resolver: true
  PurchaseOrderItem:
    fields:
      purchaseOrder:
        resolver: true
      purchaseOrderToSupply:
        resolver: true
      submittingAccount:
        resolver: true
      recentApprovingAccount:
        resolver: true
      recentLog:
        resolver: true
  PurchaseOrderItemDelivery:
    fields:
      photos:
        resolver: true
      photosAfterReceived:
        resolver: true
  PurchaseOrderToSupply:
    fields:
      purchaseOrderItems:
        resolver: true
  SupplyOrder:
    fields:
      items:
        resolver: true
      submittingAccount:
        resolver: true
      recentApprovingAccount:
        resolver: true
      recentLog:
        resolver: true
  SupplyOrderItem:
    fields:
      photos:
        resolver: true
      submittingAccount:
        resolver: true
      recentApprovingAccount:
        resolver: true
      recentLog:
        resolver: true
  SupplyOrderItemPickUp:
    fields:
      photos:
        resolver: true        
  Tag:
    fields:
      submittingAccount:
        resolver: true
      recentApprovingAccount:
        resolver: true
      recentLog:
        resolver: true
      photos:
        resolver: true
  Tagging:
    fields:
      tag:
        resolver: true
      correlatedTag:
        resolver: true
      product:
        resolver: true
      organization:
        resolver: true
      submittingAccount:
        resolver: true
      recentApprovingAccount:
        resolver: true
      recentLog:
        resolver: true

  ID:
    model:
      - github.com/99designs/gqlgen/graphql.ID
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32

  ObjectID:
    model:
      - github.com/horeekaa/backend/core/databaseClient/mongodb/modelMarshalers.ObjectID

  Time:
    model:
      - github.com/99designs/gqlgen/graphql.Time
